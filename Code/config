#! /bin/bash
if [ "${1}"  == "--help" ]; then
    echo "Options for running this configuration file:"
    echo "--help                    Prints this message"
    echo "--useRoot <ROOTSYSPath>   Configures the enviroment to use root versions <ROOTSYSPath> instead of default version" 
    echo "--TauSpinner              Configures the make file to use TauSpinner"
    echo "--cherepanov              Configures the make file to compile files in the directory cherepanov"
    echo "--inugent                 Configures the make file to compile files in the directory inugent"
    echo "--kargoll                 Configures the make file to compile files in the directory kargoll"
    echo "--nehrkorn                Configures the make file to compile files in the directory nehrkorn"
    exit
fi
echo "Configuring Environment...."
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/CommonUtils/lib
## setup variables for make file
export ROOTSYS=/usr/lib/root-5.34.11/
ROOT="/usr/lib/root-5.34.11/"
if [ "${1}"  == "--useRoot" ]; then
   export ROOTSYS=${2}
fi

myINC=$(ls | grep make.inc | wc -l)
if [ $myINC == 0 ]; then
    echo "# -*- mode: makefile-gmake -*-" >> make.inc
    for var in $@ ; do
	if [ "${var}" == "--TauSpinner" ]; then
	    echo "Configuring Code to TauSpinner"
	    echo "USE_TauSpinner=1" >> make.inc
	fi
	if [ "${var}" == "--cherepanov" ]; then
	    echo "Configuring Code to use directory cherepanov"
	    echo "USE_cherepanov=1" >> make.inc
	fi
	if [ "${var}" == "--inugent" ]; then
	    echo "Configuring Code to use directory inugent"
	    echo "USE_inugent=1" >> make.inc
	fi
	if [ "${var}" == "--kargoll" ]; then
	    echo "Configuring Code to use directory kargoll"
	    echo "USE_kargoll=1" >> make.inc
	fi
	if [ "${var}" == "--nehrkorn" ]; then
	    echo "Configuring Code to use directory nehrkorn"
	    echo "USE_nehrkorn=1" >> make.inc
	fi
    done
fi

## now downloading required code from CVS
cd CommonUtils
CommonUtils=$(ls | grep TauDataFormat | wc -l)
cd ..
if [ $CommonUtils == 0 ]; then
    cd CommonUtils
    mkdir lib

    git init 
    git clone https://github.com/inugent/SimpleFits.git SimpleFits
    cd SimpleFits
    git checkout
    cd ../

    git init
    git clone https://github.com/bkargoll/TauDataFormat.git TauDataFormat
    cd TauDataFormat
    git checkout
    cd ../

    cd ../
fi


# now get TauSpiner
hepmc=$(ls TauSpiner/* | grep HepMC | wc -l) 
if [ $hepmc == 0 ]; then
    cd TauSpiner
    wget http://lcgapp.cern.ch/project/simu/HepMC/download/HepMC-2.06.05.tar.gz
    tar -xzvf HepMC-2.06.05.tar.gz
    mkdir hepmc
    cd hepmc/
    mkdir build install
    cd ../../
fi 
# use cvs version since CERN version is 3.6G and wget is corrupted --- hopefully can be fiex later
#wget http://www.hepforge.org/downloads/lhapdf/lhapdf-5.8.6.tar.gz
#wget http://www.hepforge.org/archive/lhapdf/pdfsets/current/MSTW2008nnlo90cl.LHgrid
lhapdf=$(ls TauSpiner/* | grep  lhapdf | wc -l)
if [ $lhapdf == 1 ]; then
    cd TauSpiner
    tar -xzvf lhapdf-5.8.6.tgz
    cd ..
fi
pythia=$(ls TauSpiner/* | grep pythia8 | wc -l )
if [ $pythia == 0 ]; then 
    cd TauSpiner
    wget http://service-spi.web.cern.ch/service-spi/external/MCGenerators/distribution/pythia8/pythia8-176-src.tgz 
    tar -xzvf pythia8-176-src.tgz
    cd ..
fi
tauola=$(ls TauSpiner/* | grep tauola++ | wc -l )
if [ $tauola == 0 ]; then 
    cd TauSpiner
    # wget http://annapurna.ifj.edu.pl/~tprzedzinski/resources/TAUOLA.1.1.1a/TAUOLA.1.1.1a.tar.gz
    # tar -xzvf TAUOLA.1.1.1a.tar.gz
    wget http://service-spi.web.cern.ch/service-spi/external/MCGenerators/distribution/tauola++/tauola++-1.1.3-src.tgz
    tar -xzvf tauola++-1.1.3-src.tgz
    cd ..
fi


export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/tauola++/1.1.3/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/pythia8/176/lib/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/lhapdf/lib/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/hepmc/install/lib/


echo "Environment Configured"
